language: c
jobs:
  include:
    - name: Build on linux-default
      os: linux
      env: GENERATOR="Unix Makefiles"
      sudo: required
      before_script:
        - test -e /usr/bin/cmake || sudo ln -s $(which cmake) /usr/bin/cmake
        - curl -fsSL https://git.io/JerYI | GITHUB_USER=horta GITHUB_PROJECT=logaddexp
          DO_CMD=sudo bash
    - name: Build on osx-default
      os: osx
      env: GENERATOR="Unix Makefiles"
      before_script:
        curl -fsSL https://git.io/JerYI | GITHUB_USER=horta GITHUB_PROJECT=logaddexp
        DO_CMD=sudo bash
    - name: Build on windows-vs15
      os: windows
      env: GENERATOR="Visual Studio 15 2017 Win64"
      before_script:
        curl -fsSL https://git.io/JerYI | GITHUB_USER=horta GITHUB_PROJECT=logaddexp
        bash
    - name: Build on windows-ninja
      os: windows
      env: GENERATOR=Ninja
      before_script:
        curl -fsSL https://git.io/JerYI | GITHUB_USER=horta GITHUB_PROJECT=logaddexp
        bash
      before_install: choco install ninja --no-progress -y
    - name: Install on linux-default
      os: linux
      sudo: required
      before_script: test -e /usr/bin/cmake || sudo ln -s $(which cmake) /usr/bin/cmake
      script:
        - curl -fsSL https://git.io/JerYI | GITHUB_USER=horta GITHUB_PROJECT=logaddexp
          DO_CMD=sudo bash
        - curl -fsSL https://git.io/JerYI | GITHUB_USER=limix GITHUB_PROJECT=liknorm DO_CMD=sudo
          bash
    - name: Install on osx-default
      os: osx
      script:
        - curl -fsSL https://git.io/JerYI | GITHUB_USER=horta GITHUB_PROJECT=logaddexp
          DO_CMD=sudo bash
        - curl -fsSL https://git.io/JerYI | GITHUB_USER=limix GITHUB_PROJECT=liknorm DO_CMD=sudo
          bash
    - name: Install on windows
      os: windows
      script:
        - curl -fsSL https://git.io/JerYI | GITHUB_USER=horta GITHUB_PROJECT=logaddexp
          bash
        - curl -fsSL https://git.io/JerYI | GITHUB_USER=limix GITHUB_PROJECT=liknorm bash
script:
  - mkdir prefix
  - mkdir build
  - cd build
  - cmake -G"$GENERATOR" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/prefix
    ..
  - cmake --build . --config Release
  - ctest --output-on-failure -C Release
  - cmake --build . --config Release --target install
  - test -e $TRAVIS_BUILD_DIR/prefix/include/liknorm/liknorm.h
  - test -e $TRAVIS_BUILD_DIR/prefix/lib/cmake/liknorm/liknorm-config.cmake
  - test -e $TRAVIS_BUILD_DIR/prefix/lib/cmake/liknorm/liknorm-targets-release.cmake
  - test -e $TRAVIS_BUILD_DIR/prefix/lib/cmake/liknorm/liknorm-targets.cmake
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then otool -l $TRAVIS_BUILD_DIR/prefix/lib/libliknorm.dylib
    | grep -q LC_RPATH; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then test -e $TRAVIS_BUILD_DIR/prefix/lib/libliknorm.so;
    fi
  - cd $TRAVIS_BUILD_DIR
  - git clean -xdf
notifications:
  email:
    recipients:
      - danilo.horta@pm.me
    on_success: never
    on_failure: always
deploy:
  provider: releases
  api_key:
    secure: wxwK4ZEbvHxAN7Q8hmZqvdOvatxUK1WyVO6eFvZ3vTcMtQ4P329lWwCfcORV0GdJ70XMoGliQQqgxssGtsxyfFWEI7MVLSOrWPKJcYmKe1rek/v73I29DU8+4Ezhbn3AelZkPGb6koCTbitCorgVvzLRk8byqoI2ttSpFebaLxVIi1zjnbg8jTRp8rokK6pAZUj4oeDxI5FOBxOLLDvlH3dggbfL/1ndNK1Lj2LDjHkbYyK3mOir5hySY8jyvhCU7wEILj6Qrs2R+ddHPzTC9U0v4TyT0eDUhI1qxG2a0NO/8wYbgSLxNQCBL0G/8fuVKQbcxE/N2x2rQUJ7PfHuk7mqNLj6CgOz37yka2o+rydMG5lTv7ILoQJNA7TVZV7M4xzNRSRvqvzQwqpoPwP+q9RE85r3gn8whhJIh6xalx5pmNkHHoqUgjBqP0EEwfqP9QnhnIzkyH60HkvU+dk8+N1mu78z1239bkbkwyYlu8XRJrBH//8ddsRMLRM6us34Zh0P00qzzgQzifUJWoUICk5MVKnZdIRmK5lhX/OPGRcQ3xGTmoKpQYBK12UcLxpXSe1pNIQ5LY9c1X3349N8Lc+ugCyZVhQXleiY/BcD9kmChzed2Z5xF1fqK7udghqeruwKa4pa9Jm4aFiu/QD3ntKeY3YTXDAcomoSLJy5eAw=
  on:
    tags: true
    repo: limix/liknorm
    branch: master
    skip_existing: true
